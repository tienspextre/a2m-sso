<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.a2m.sso.dao.UserDAO">

    <select id="getUserByUserId" parameterType="String"
            resultType="com.a2m.sso.model.UserResponse">
        SELECT T1.USER_UID as userUid,
               T1.USER_ID as userId,
               T1.PWD as pwd,
               T1.STATUS as status,
               T2.EMAIL as email,
               T2.PHONE as cellPhone,
               T2.DOB as dob,
               T2.FULL_NAME as fullName,
               T2.ADDRESS as address,
               T2.GENDER as gender,
               T2.IMG_PATH as imgPath,
               T2.VERIFY_KEY as emailVerifyKey,
               T2.CREATED_DATE as createdDate,
               T2.UPDATED_DATE as updatedDate
        FROM TSST_USER T1
            LEFT JOIN TSST_USER_INFO T2 ON T1.USER_UID = T2.USER_UID
        WHERE
            T1.USER_ID = #{userId}
    </select>

    <!-- Get user information by userUid -->
    <select id="getUserInfoByUserUid" parameterType="String"
            resultType="com.a2m.sso.model.UserResponse">
        SELECT T1.USER_UID as userUid,
               T1.USER_ID as userId,
               T1.CREATED_BY as createdBy,p
               T1.CREATED_DATE as createdDate,
               T1.PWD as pwd,
               T1.UPDATED_DATE as updatedDate,
               T1.UPDATED_BY as updatedBy,
               T1.PWD_EXPR as pwdExpr,
               T1.STATUS as status,
               T1.USER_INFO_ID as userInfoId,
               T1.AUTH_PROVIDER as authProvider,
               T2.EMAIL as email,
               T2.CELL_PHONE as cellPhone,
               T2.DOB as dob,
               T2.FULL_NAME as fullName,
               T2.ADDRESS as address,
               T2.GENDER as gender,
               T2.IMG_PATH as imgPath,
               T2.2FA_ENABLE as twoFAEnable,
               T2.2FA_KEY as twoFAKey,
               T2.VERIFY_KEY as emailVerifyKey,
               T2.ORGANIZATION as organization,
               T2.POSITION as position
        FROM TSST_USER T1
            LEFT JOIN TSST_USER_INFO T2 ON T1.USER_INFO_ID = T2.USER_INFO_ID
        WHERE
            T1.USER_UID = #{userUid}
    </select >

    <insert id="insertUser" parameterType="com.a2m.sso.model.UserResponse">
    	INSERT INTO tsst_user (USER_UID, USER_ID, PWD, STATUS) VALUES(#{userUid},#{userId}, #{pwd}, #{status})
    </insert>
    
    <insert id="insertUserInfo" parameterType="com.a2m.sso.model.UserResponse">
    	INSERT INTO tsst_user_info (USER_UID, FULL_NAME, EMAIL, VERIFY_KEY) VALUES(#{userUid}, #{fullName}, #{email}, #{emailVerifyKey})
    </insert>
    
    <select id="checkVerifyKey" parameterType="String" resultType="int">
    	SELECT COUNT(*) FROM tsst_user LEFT JOIN tsst_user_info ON tsst_user.USER_UID = tsst_user_info.USER_UID WHERE #{verifyKey} = tsst_user_info.VERIFY_KEY
    </select>
    
    <update id="setStatusByVerifyKey" parameterType="String">
    	UPDATE tsst_user LEFT JOIN tsst_user_info ON tsst_user.USER_UID = tsst_user_info.USER_UID SET tsst_user.STATUS = '02-03' WHERE #{verifyKey} = tsst_user_info.VERIFY_KEY
    </update>
    
    <select id="validateExistingEmail" parameterType="String" resultType="int">
    	SELECT COUNT(*) FROM tsst_user_info where EMAIL = #{email}
    </select>
    
    <select id="validateExistingUserName" parameterType="String" resultType="int">
    	SELECT COUNT(*) FROM tsst_user where USER_ID = #{username}
    </select>
</mapper>